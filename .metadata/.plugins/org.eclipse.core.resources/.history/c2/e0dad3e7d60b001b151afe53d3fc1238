/*
 * generated by Xtext 2.23.0.M3
 */
package org.xtext.example.landingpagedsl.validation;

import org.eclipse.xtext.validation.Check;
import org.xtext.example.landingpagedsl.lPDSL.LPDSLPackage;
import org.xtext.example.landingpagedsl.lPDSL.LandingPage;
import org.xtext.example.landingpagedsl.lPDSL.PageBody;
import org.xtext.example.landingpagedsl.lPDSL.PageComponent;
import org.xtext.example.landingpagedsl.lPDSL.PageHeader;
import org.xtext.example.landingpagedsl.lPDSL.Sections;
import org.xtext.example.landingpagedsl.lPDSL.TabItems;
import com.google.common.base.Objects;
/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class LPDSLValidator extends AbstractLPDSLValidator {
	
//TODO: path in image is correct format path, same for link in link
	
	//TODO: all tab names corresponds to a section name
	public static final String INVALID_NAME = "invalidName";
	
	@Check
	public void tabHasSection (TabItems tab, PageBody body) {
		int counter = 0;
		String tabName = tab.getName();
		System.out.println(tabName);
		for (Sections section : body.getSections()) {
			System.out.println(section.getName());
			if (tabName.contentEquals(section.getName())) {
				++counter;
			}
		}
		if (counter != 1) {
			error("you fucked up, Each Tab has to have exactly one corresponding section!", LPDSLPackage.Literals.SECTIONS__NAME);
		}
	}
	
	@Check
	public void tabCapitalLetter(TabItems tab) {
		if (!Character.isUpperCase(tab.getName().charAt(0))) {
			warning("Name should start with a capital",
					LPDSLPackage.Literals.TAB_ITEMS__NAME,
					INVALID_NAME);
		}
	}
	
	@Check
	public void checkOnePageBody(LandingPage page) {
		int check = 0;
		for(PageComponent component : page.getPagecomponent()) {
			if (component.getClass().getSimpleName().toString().equals("PageBodyImpl")) {
				check += 1;
			}
		}
		if(check > 1) {
			error("There can only be one body section in your landing page", LPDSLPackage.Literals.LANDING_PAGE__PAGECOMPONENT);
		}
	}
	
	@Check
	public void checkOnePageHeader(LandingPage page) {
		int check = 0;
		for(PageComponent component : page.getPagecomponent()) {
			if (component.getClass().getSimpleName().toString().equals("PageHeaderImpl")) {
				check += 1;
			}
		}
		if(check > 1) {
			error("There can only be one header section in your landing page", LPDSLPackage.Literals.LANDING_PAGE__PAGECOMPONENT);
		}
	}
	
	@Check
	public void checkOnePageFooter(LandingPage page) {
		int check = 0;
		for(PageComponent component : page.getPagecomponent()) {
			if (component.getClass().getSimpleName().toString().equals("PageFooterImpl")) {
				check += 1;
			}
		}
		if(check > 1) {
			error("There can only be one footer section in your landing page", LPDSLPackage.Literals.LANDING_PAGE__PAGECOMPONENT);
		}
	}
}
