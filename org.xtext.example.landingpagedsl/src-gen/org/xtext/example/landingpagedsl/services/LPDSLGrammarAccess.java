/*
 * generated by Xtext 2.23.0.M3
 */
package org.xtext.example.landingpagedsl.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class LPDSLGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class LandingPageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.LandingPage");
		private final Assignment cPagecomponentAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cPagecomponentPageComponentParserRuleCall_0 = (RuleCall)cPagecomponentAssignment.eContents().get(0);
		
		//LandingPage:
		//	pagecomponent+=PageComponent*;
		@Override public ParserRule getRule() { return rule; }
		
		//pagecomponent+=PageComponent*
		public Assignment getPagecomponentAssignment() { return cPagecomponentAssignment; }
		
		//PageComponent
		public RuleCall getPagecomponentPageComponentParserRuleCall_0() { return cPagecomponentPageComponentParserRuleCall_0; }
	}
	public class PageComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.PageComponent");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cPageHeaderParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cPageBodyParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPageFooterParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//PageComponent:
		//	PageHeader | PageBody | PageFooter;
		@Override public ParserRule getRule() { return rule; }
		
		//PageHeader | PageBody | PageFooter
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//PageHeader
		public RuleCall getPageHeaderParserRuleCall_0() { return cPageHeaderParserRuleCall_0; }
		
		//PageBody
		public RuleCall getPageBodyParserRuleCall_1() { return cPageBodyParserRuleCall_1; }
		
		//PageFooter
		public RuleCall getPageFooterParserRuleCall_2() { return cPageFooterParserRuleCall_2; }
	}
	public class PictureCarouselElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.PictureCarousel");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cCarouselKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTimerAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTimerTimeSpecifierParserRuleCall_3_0 = (RuleCall)cTimerAssignment_3.eContents().get(0);
		private final Assignment cPictureAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cPicturePictureParserRuleCall_4_0 = (RuleCall)cPictureAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PictureCarousel:
		//	'carousel' name=ID '{'
		//	timer+=TimeSpecifier
		//	picture+=Picture*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'carousel' name=ID '{' timer+=TimeSpecifier picture+=Picture* '}'
		public Group getGroup() { return cGroup; }
		
		//'carousel'
		public Keyword getCarouselKeyword_0() { return cCarouselKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//timer+=TimeSpecifier
		public Assignment getTimerAssignment_3() { return cTimerAssignment_3; }
		
		//TimeSpecifier
		public RuleCall getTimerTimeSpecifierParserRuleCall_3_0() { return cTimerTimeSpecifierParserRuleCall_3_0; }
		
		//picture+=Picture*
		public Assignment getPictureAssignment_4() { return cPictureAssignment_4; }
		
		//Picture
		public RuleCall getPicturePictureParserRuleCall_4_0() { return cPicturePictureParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PageFooterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.PageFooter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cFooterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLinksLinkItemParserRuleCall_3_0 = (RuleCall)cLinksAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PageFooter:
		//	'footer' name=ID '{'
		//	links+=LinkItem*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'footer' name=ID '{' links+=LinkItem* '}'
		public Group getGroup() { return cGroup; }
		
		//'footer'
		public Keyword getFooterKeyword_0() { return cFooterKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//links+=LinkItem*
		public Assignment getLinksAssignment_3() { return cLinksAssignment_3; }
		
		//LinkItem
		public RuleCall getLinksLinkItemParserRuleCall_3_0() { return cLinksLinkItemParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class LinkItemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.LinkItem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinkKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTextAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTextItemsParserRuleCall_3_0 = (RuleCall)cTextAssignment_3.eContents().get(0);
		private final Assignment cLinkAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLinkURLParserRuleCall_4_0 = (RuleCall)cLinkAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//LinkItem:
		//	'link' name=ID '{'
		//	text+=Items
		//	link+=URL
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'link' name=ID '{' text+=Items link+=URL '}'
		public Group getGroup() { return cGroup; }
		
		//'link'
		public Keyword getLinkKeyword_0() { return cLinkKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//text+=Items
		public Assignment getTextAssignment_3() { return cTextAssignment_3; }
		
		//Items
		public RuleCall getTextItemsParserRuleCall_3_0() { return cTextItemsParserRuleCall_3_0; }
		
		//link+=URL
		public Assignment getLinkAssignment_4() { return cLinkAssignment_4; }
		
		//URL
		public RuleCall getLinkURLParserRuleCall_4_0() { return cLinkURLParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class URLElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.URL");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cPathAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cPathPathParserRuleCall_2_0 = (RuleCall)cPathAssignment_2.eContents().get(0);
		
		//URL:
		//	name=ID ':' path+=Path;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' path+=Path
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//path+=Path
		public Assignment getPathAssignment_2() { return cPathAssignment_2; }
		
		//Path
		public RuleCall getPathPathParserRuleCall_2_0() { return cPathPathParserRuleCall_2_0; }
	}
	public class PathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Path");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//Path:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class PageHeaderElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.PageHeader");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHeaderKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTitleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTitleItemsParserRuleCall_3_0 = (RuleCall)cTitleAssignment_3.eContents().get(0);
		private final Assignment cTabsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTabsTabItemsParserRuleCall_4_0 = (RuleCall)cTabsAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//PageHeader:
		//	'header' name=ID '{'
		//	title+=Items
		//	tabs+=TabItems*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'header' name=ID '{' title+=Items tabs+=TabItems* '}'
		public Group getGroup() { return cGroup; }
		
		//'header'
		public Keyword getHeaderKeyword_0() { return cHeaderKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//title+=Items
		public Assignment getTitleAssignment_3() { return cTitleAssignment_3; }
		
		//Items
		public RuleCall getTitleItemsParserRuleCall_3_0() { return cTitleItemsParserRuleCall_3_0; }
		
		//tabs+=TabItems*
		public Assignment getTabsAssignment_4() { return cTabsAssignment_4; }
		
		//TabItems
		public RuleCall getTabsTabItemsParserRuleCall_4_0() { return cTabsTabItemsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class TabItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.TabItems");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionDescriptionParserRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//TabItems:
		//	name=ID ':' description+=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' description+=Description
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//description+=Description
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_2_0() { return cDescriptionDescriptionParserRuleCall_2_0; }
	}
	public class PageBodyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.PageBody");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cBodyKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSectionsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSectionsSectionsParserRuleCall_3_0 = (RuleCall)cSectionsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PageBody:
		//	'body' name=ID '{'
		//	sections+=Sections*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'body' name=ID '{' sections+=Sections* '}'
		public Group getGroup() { return cGroup; }
		
		//'body'
		public Keyword getBodyKeyword_0() { return cBodyKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//sections+=Sections*
		public Assignment getSectionsAssignment_3() { return cSectionsAssignment_3; }
		
		//Sections
		public RuleCall getSectionsSectionsParserRuleCall_3_0() { return cSectionsSectionsParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class SectionsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Sections");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cResumeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAboutMeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPictureCarouselParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cContactInformationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLinksParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		
		//Sections:
		//	Resume | AboutMe | PictureCarousel | ContactInformation | Links;
		@Override public ParserRule getRule() { return rule; }
		
		//Resume | AboutMe | PictureCarousel | ContactInformation | Links
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Resume
		public RuleCall getResumeParserRuleCall_0() { return cResumeParserRuleCall_0; }
		
		//AboutMe
		public RuleCall getAboutMeParserRuleCall_1() { return cAboutMeParserRuleCall_1; }
		
		//PictureCarousel
		public RuleCall getPictureCarouselParserRuleCall_2() { return cPictureCarouselParserRuleCall_2; }
		
		//ContactInformation
		public RuleCall getContactInformationParserRuleCall_3() { return cContactInformationParserRuleCall_3; }
		
		//Links
		public RuleCall getLinksParserRuleCall_4() { return cLinksParserRuleCall_4; }
	}
	public class LinksElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Links");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLinksKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLinksAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLinksLinkItemParserRuleCall_3_0 = (RuleCall)cLinksAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Links:
		//	'links' name=ID '{'
		//	links+=LinkItem*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'links' name=ID '{' links+=LinkItem* '}'
		public Group getGroup() { return cGroup; }
		
		//'links'
		public Keyword getLinksKeyword_0() { return cLinksKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//links+=LinkItem*
		public Assignment getLinksAssignment_3() { return cLinksAssignment_3; }
		
		//LinkItem
		public RuleCall getLinksLinkItemParserRuleCall_3_0() { return cLinksLinkItemParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ContactInformationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.ContactInformation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cContactinfoKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//ContactInformation:
		//	'contactinfo' name=ID '{'
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'contactinfo' name=ID '{' '}'
		public Group getGroup() { return cGroup; }
		
		//'contactinfo'
		public Keyword getContactinfoKeyword_0() { return cContactinfoKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}
	public class ResumeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Resume");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cResumeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cResumeitemsAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResumeitemsItemsParserRuleCall_3_0 = (RuleCall)cResumeitemsAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Resume:
		//	'resume' name=ID '{'
		//	resumeitems+=Items*
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'resume' name=ID '{' resumeitems+=Items* '}'
		public Group getGroup() { return cGroup; }
		
		//'resume'
		public Keyword getResumeKeyword_0() { return cResumeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//resumeitems+=Items*
		public Assignment getResumeitemsAssignment_3() { return cResumeitemsAssignment_3; }
		
		//Items
		public RuleCall getResumeitemsItemsParserRuleCall_3_0() { return cResumeitemsItemsParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ItemsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Items");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cDescriptionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cDescriptionDescriptionParserRuleCall_2_0 = (RuleCall)cDescriptionAssignment_2.eContents().get(0);
		
		//Items:
		//	name=ID ':' description+=Description;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' description+=Description
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//description+=Description
		public Assignment getDescriptionAssignment_2() { return cDescriptionAssignment_2; }
		
		//Description
		public RuleCall getDescriptionDescriptionParserRuleCall_2_0() { return cDescriptionDescriptionParserRuleCall_2_0; }
	}
	public class DescriptionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Description");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//Description:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	public class TimeSpecifierElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.TimeSpecifier");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cTimeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTimeIntegerParserRuleCall_2_0 = (RuleCall)cTimeAssignment_2.eContents().get(0);
		
		//TimeSpecifier:
		//	name=ID ':' time+=Integer;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' time+=Integer
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//time+=Integer
		public Assignment getTimeAssignment_2() { return cTimeAssignment_2; }
		
		//Integer
		public RuleCall getTimeIntegerParserRuleCall_2_0() { return cTimeIntegerParserRuleCall_2_0; }
	}
	public class IntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Integer");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//Integer:
		//	value=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//value=INT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}
	public class AboutMeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.AboutMe");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAboutmeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cPictureAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cPicturePictureParserRuleCall_3_0 = (RuleCall)cPictureAssignment_3.eContents().get(0);
		private final Assignment cDescriptionAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cDescriptionItemsParserRuleCall_4_0 = (RuleCall)cDescriptionAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//AboutMe:
		//	'aboutme' name=ID '{'
		//	picture+=Picture
		//	description+=Items
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'aboutme' name=ID '{' picture+=Picture description+=Items '}'
		public Group getGroup() { return cGroup; }
		
		//'aboutme'
		public Keyword getAboutmeKeyword_0() { return cAboutmeKeyword_0; }
		
		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//picture+=Picture
		public Assignment getPictureAssignment_3() { return cPictureAssignment_3; }
		
		//Picture
		public RuleCall getPicturePictureParserRuleCall_3_0() { return cPicturePictureParserRuleCall_3_0; }
		
		//description+=Items
		public Assignment getDescriptionAssignment_4() { return cDescriptionAssignment_4; }
		
		//Items
		public RuleCall getDescriptionItemsParserRuleCall_4_0() { return cDescriptionItemsParserRuleCall_4_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class PictureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.Picture");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cImagepathAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cImagepathImagePathParserRuleCall_2_0 = (RuleCall)cImagepathAssignment_2.eContents().get(0);
		
		//Picture:
		//	name=ID ':' imagepath+=ImagePath;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':' imagepath+=ImagePath
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//imagepath+=ImagePath
		public Assignment getImagepathAssignment_2() { return cImagepathAssignment_2; }
		
		//ImagePath
		public RuleCall getImagepathImagePathParserRuleCall_2_0() { return cImagepathImagePathParserRuleCall_2_0; }
	}
	public class ImagePathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.landingpagedsl.LPDSL.ImagePath");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ImagePath:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}
	
	
	private final LandingPageElements pLandingPage;
	private final PageComponentElements pPageComponent;
	private final PictureCarouselElements pPictureCarousel;
	private final PageFooterElements pPageFooter;
	private final LinkItemElements pLinkItem;
	private final URLElements pURL;
	private final PathElements pPath;
	private final PageHeaderElements pPageHeader;
	private final TabItemsElements pTabItems;
	private final PageBodyElements pPageBody;
	private final SectionsElements pSections;
	private final LinksElements pLinks;
	private final ContactInformationElements pContactInformation;
	private final ResumeElements pResume;
	private final ItemsElements pItems;
	private final DescriptionElements pDescription;
	private final TimeSpecifierElements pTimeSpecifier;
	private final IntegerElements pInteger;
	private final AboutMeElements pAboutMe;
	private final PictureElements pPicture;
	private final ImagePathElements pImagePath;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public LPDSLGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pLandingPage = new LandingPageElements();
		this.pPageComponent = new PageComponentElements();
		this.pPictureCarousel = new PictureCarouselElements();
		this.pPageFooter = new PageFooterElements();
		this.pLinkItem = new LinkItemElements();
		this.pURL = new URLElements();
		this.pPath = new PathElements();
		this.pPageHeader = new PageHeaderElements();
		this.pTabItems = new TabItemsElements();
		this.pPageBody = new PageBodyElements();
		this.pSections = new SectionsElements();
		this.pLinks = new LinksElements();
		this.pContactInformation = new ContactInformationElements();
		this.pResume = new ResumeElements();
		this.pItems = new ItemsElements();
		this.pDescription = new DescriptionElements();
		this.pTimeSpecifier = new TimeSpecifierElements();
		this.pInteger = new IntegerElements();
		this.pAboutMe = new AboutMeElements();
		this.pPicture = new PictureElements();
		this.pImagePath = new ImagePathElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.landingpagedsl.LPDSL".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//LandingPage:
	//	pagecomponent+=PageComponent*;
	public LandingPageElements getLandingPageAccess() {
		return pLandingPage;
	}
	
	public ParserRule getLandingPageRule() {
		return getLandingPageAccess().getRule();
	}
	
	//PageComponent:
	//	PageHeader | PageBody | PageFooter;
	public PageComponentElements getPageComponentAccess() {
		return pPageComponent;
	}
	
	public ParserRule getPageComponentRule() {
		return getPageComponentAccess().getRule();
	}
	
	//PictureCarousel:
	//	'carousel' name=ID '{'
	//	timer+=TimeSpecifier
	//	picture+=Picture*
	//	'}';
	public PictureCarouselElements getPictureCarouselAccess() {
		return pPictureCarousel;
	}
	
	public ParserRule getPictureCarouselRule() {
		return getPictureCarouselAccess().getRule();
	}
	
	//PageFooter:
	//	'footer' name=ID '{'
	//	links+=LinkItem*
	//	'}';
	public PageFooterElements getPageFooterAccess() {
		return pPageFooter;
	}
	
	public ParserRule getPageFooterRule() {
		return getPageFooterAccess().getRule();
	}
	
	//LinkItem:
	//	'link' name=ID '{'
	//	text+=Items
	//	link+=URL
	//	'}';
	public LinkItemElements getLinkItemAccess() {
		return pLinkItem;
	}
	
	public ParserRule getLinkItemRule() {
		return getLinkItemAccess().getRule();
	}
	
	//URL:
	//	name=ID ':' path+=Path;
	public URLElements getURLAccess() {
		return pURL;
	}
	
	public ParserRule getURLRule() {
		return getURLAccess().getRule();
	}
	
	//Path:
	//	value=STRING;
	public PathElements getPathAccess() {
		return pPath;
	}
	
	public ParserRule getPathRule() {
		return getPathAccess().getRule();
	}
	
	//PageHeader:
	//	'header' name=ID '{'
	//	title+=Items
	//	tabs+=TabItems*
	//	'}';
	public PageHeaderElements getPageHeaderAccess() {
		return pPageHeader;
	}
	
	public ParserRule getPageHeaderRule() {
		return getPageHeaderAccess().getRule();
	}
	
	//TabItems:
	//	name=ID ':' description+=Description;
	public TabItemsElements getTabItemsAccess() {
		return pTabItems;
	}
	
	public ParserRule getTabItemsRule() {
		return getTabItemsAccess().getRule();
	}
	
	//PageBody:
	//	'body' name=ID '{'
	//	sections+=Sections*
	//	'}';
	public PageBodyElements getPageBodyAccess() {
		return pPageBody;
	}
	
	public ParserRule getPageBodyRule() {
		return getPageBodyAccess().getRule();
	}
	
	//Sections:
	//	Resume | AboutMe | PictureCarousel | ContactInformation | Links;
	public SectionsElements getSectionsAccess() {
		return pSections;
	}
	
	public ParserRule getSectionsRule() {
		return getSectionsAccess().getRule();
	}
	
	//Links:
	//	'links' name=ID '{'
	//	links+=LinkItem*
	//	'}';
	public LinksElements getLinksAccess() {
		return pLinks;
	}
	
	public ParserRule getLinksRule() {
		return getLinksAccess().getRule();
	}
	
	//ContactInformation:
	//	'contactinfo' name=ID '{'
	//	'}';
	public ContactInformationElements getContactInformationAccess() {
		return pContactInformation;
	}
	
	public ParserRule getContactInformationRule() {
		return getContactInformationAccess().getRule();
	}
	
	//Resume:
	//	'resume' name=ID '{'
	//	resumeitems+=Items*
	//	'}';
	public ResumeElements getResumeAccess() {
		return pResume;
	}
	
	public ParserRule getResumeRule() {
		return getResumeAccess().getRule();
	}
	
	//Items:
	//	name=ID ':' description+=Description;
	public ItemsElements getItemsAccess() {
		return pItems;
	}
	
	public ParserRule getItemsRule() {
		return getItemsAccess().getRule();
	}
	
	//Description:
	//	value=STRING;
	public DescriptionElements getDescriptionAccess() {
		return pDescription;
	}
	
	public ParserRule getDescriptionRule() {
		return getDescriptionAccess().getRule();
	}
	
	//TimeSpecifier:
	//	name=ID ':' time+=Integer;
	public TimeSpecifierElements getTimeSpecifierAccess() {
		return pTimeSpecifier;
	}
	
	public ParserRule getTimeSpecifierRule() {
		return getTimeSpecifierAccess().getRule();
	}
	
	//Integer:
	//	value=INT;
	public IntegerElements getIntegerAccess() {
		return pInteger;
	}
	
	public ParserRule getIntegerRule() {
		return getIntegerAccess().getRule();
	}
	
	//AboutMe:
	//	'aboutme' name=ID '{'
	//	picture+=Picture
	//	description+=Items
	//	'}';
	public AboutMeElements getAboutMeAccess() {
		return pAboutMe;
	}
	
	public ParserRule getAboutMeRule() {
		return getAboutMeAccess().getRule();
	}
	
	//Picture:
	//	name=ID ':' imagepath+=ImagePath;
	public PictureElements getPictureAccess() {
		return pPicture;
	}
	
	public ParserRule getPictureRule() {
		return getPictureAccess().getRule();
	}
	
	//ImagePath:
	//	value=STRING;
	public ImagePathElements getImagePathAccess() {
		return pImagePath;
	}
	
	public ParserRule getImagePathRule() {
		return getImagePathAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
