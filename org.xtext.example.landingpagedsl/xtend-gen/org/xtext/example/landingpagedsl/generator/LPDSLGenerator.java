/**
 * generated by Xtext 2.23.0.M3
 */
package org.xtext.example.landingpagedsl.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.example.landingpagedsl.lPDSL.PageHeader;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class LPDSLGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    Iterable<PageHeader> _filter = Iterables.<PageHeader>filter(IteratorExtensions.<EObject>toIterable(resource.getAllContents()), PageHeader.class);
    for (final PageHeader NavBar : _filter) {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("<!DOCTYPE html>");
      _builder.newLine();
      _builder.append("<html lang=\"en\">");
      _builder.newLine();
      _builder.append("<head>");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<title>");
      String _xifexpression = null;
      if ((NavBar != null)) {
        _xifexpression = NavBar.getName().toString();
      } else {
        _xifexpression = "Landing Page";
      }
      _builder.append(_xifexpression, "  ");
      _builder.append("</title>");
      _builder.newLineIfNotEmpty();
      _builder.append("  ");
      _builder.append("<meta charset=\"utf-8\">");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<meta name=\"author\" content=\"\">");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("crossorigin=\"anonymous\"></script>");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("crossorigin=\"anonymous\"></script>");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("integrity=\"sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s\"");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("crossorigin=\"anonymous\"></script>");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("<style>");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("body {");
      _builder.newLine();
      _builder.append("      ");
      _builder.append("background-color: grey;");
      _builder.newLine();
      _builder.append("    ");
      _builder.append("}");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("</style>");
      _builder.newLine();
      _builder.append("</head>");
      _builder.newLine();
      _builder.append("<body>");
      _builder.newLine();
      _builder.newLine();
      _builder.append("</body>");
      _builder.newLine();
      _builder.append("</html>");
      _builder.newLine();
      fsa.generateFile("huh.html", _builder);
    }
  }
}
