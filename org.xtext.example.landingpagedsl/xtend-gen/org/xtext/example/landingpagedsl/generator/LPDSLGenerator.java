/**
 * generated by Xtext 2.23.0.M3
 */
package org.xtext.example.landingpagedsl.generator;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.example.landingpagedsl.lPDSL.AboutMe;
import org.xtext.example.landingpagedsl.lPDSL.ContactInformation;
import org.xtext.example.landingpagedsl.lPDSL.Items;
import org.xtext.example.landingpagedsl.lPDSL.Links;
import org.xtext.example.landingpagedsl.lPDSL.PageBody;
import org.xtext.example.landingpagedsl.lPDSL.PageFooter;
import org.xtext.example.landingpagedsl.lPDSL.PageHeader;
import org.xtext.example.landingpagedsl.lPDSL.PictureCarousel;
import org.xtext.example.landingpagedsl.lPDSL.Resume;
import org.xtext.example.landingpagedsl.lPDSL.Sections;
import org.xtext.example.landingpagedsl.lPDSL.TabItems;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class LPDSLGenerator extends AbstractGenerator {
  private StringConcatenation builder = new StringConcatenation();
  
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    StringConcatenation _stringConcatenation = new StringConcatenation();
    this.builder = _stringConcatenation;
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<!DOCTYPE html>");
    _builder.newLine();
    _builder.append("<html lang=\"en\">");
    _builder.newLine();
    _builder.append("<head>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<title>Landin Page</title>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<meta charset=\"utf-8\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<meta name=\"author\" content=\"\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<script src=\"https://code.jquery.com/jquery-3.5.1.slim.min.js\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("integrity=\"sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("crossorigin=\"anonymous\"></script>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("integrity=\"sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("crossorigin=\"anonymous\"></script>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("integrity=\"sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s\"");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("crossorigin=\"anonymous\"></script>");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("<style>");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("body {");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("background-color: grey;");
    _builder.newLine();
    _builder.append("    ");
    _builder.append("}");
    _builder.newLine();
    _builder.append("  ");
    _builder.append("</style>");
    _builder.newLine();
    _builder.append("</head>");
    _builder.newLine();
    _builder.append("<body>");
    _builder.newLine();
    _builder.append("<div class=\"container\">");
    this.builder.append(_builder);
    Iterable<EObject> _iterable = IteratorExtensions.<EObject>toIterable(resource.getAllContents());
    for (final EObject component : _iterable) {
      {
        if ((component instanceof PageHeader)) {
          this.genHeader(((PageHeader)component));
        }
        if ((component instanceof PageBody)) {
          this.genBody(((PageBody)component));
        }
        if ((component instanceof PageFooter)) {
          this.genFooter(((PageFooter)component));
        }
      }
    }
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.append("</div>");
    _builder_1.newLine();
    _builder_1.append("</body>");
    _builder_1.newLine();
    _builder_1.append("</html>");
    _builder_1.newLine();
    this.builder.append(_builder_1);
    fsa.generateFile("huh.html", this.builder);
  }
  
  private void genHeader(final PageHeader header) {
    this.builder.newLine();
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<!--Navbar-->");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("<nav class=\"navbar  navbar-dark bg-dark mb-3\">");
    _builder.newLine();
    this.builder.append(_builder);
    EList<Items> _title = header.getTitle();
    for (final Items title : _title) {
      {
        String str = title.getDescription().get(0).getValue();
        this.genTitle(str);
      }
    }
    this.builder.newLine();
    StringConcatenation _builder_1 = new StringConcatenation();
    _builder_1.newLine();
    _builder_1.append("<div class=\"nav-scroller py-1 mb-2\">");
    _builder_1.newLine();
    _builder_1.append("  ");
    _builder_1.append("<nav class=\"nav d-flex justify-content-between\">");
    _builder_1.newLine();
    this.builder.append(_builder_1);
    EList<TabItems> _tabs = header.getTabs();
    for (final TabItems tab : _tabs) {
      {
        String str = tab.getDescription().get(0).getValue();
        this.genTab(str);
      }
    }
    this.builder.newLine();
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("    ");
    _builder_2.append("</nav>");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("</div>");
    _builder_2.newLine();
    _builder_2.append("</nav>");
    this.builder.append(_builder_2);
  }
  
  private void genTitle(final String t) {
    this.builder.newLine();
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div class=\"navbar-brand\">");
    _builder.append(t);
    _builder.append("</div>");
    _builder.newLineIfNotEmpty();
    this.builder.append(_builder);
  }
  
  private void genTab(final String t) {
    this.builder.newLine();
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<a class=\"p-2 text-muted\" href=\"#\">");
    _builder.append(t);
    _builder.append("</a>");
    _builder.newLineIfNotEmpty();
    this.builder.append(_builder);
  }
  
  private void genBody(final PageBody body) {
    EList<Sections> _sections = body.getSections();
    for (final Sections section : _sections) {
      {
        if ((section instanceof Resume)) {
          this.genResume(((Resume)section));
        }
        if ((section instanceof AboutMe)) {
        }
        if ((section instanceof PictureCarousel)) {
        }
        if ((section instanceof ContactInformation)) {
        }
        if ((section instanceof Links)) {
        }
      }
    }
  }
  
  private void genResume(final Resume res) {
    this.builder.newLine();
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<div class=\"row mb-3\">");
    _builder.newLine();
    _builder.append("      ");
    _builder.append("<div class=\"col\">");
    _builder.newLine();
    _builder.append("        ");
    _builder.append("<div class=\"card\">");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<div class=\"card-header\">");
    _builder.newLine();
    _builder.append("            ");
    _builder.append("Resume");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("</div>");
    _builder.newLine();
    _builder.append("          ");
    _builder.append("<div class=\"card-deck\">");
    _builder.newLine();
    this.builder.append(_builder);
    EList<Items> _resumeitems = res.getResumeitems();
    for (final Items e : _resumeitems) {
      StringConcatenation _builder_1 = new StringConcatenation();
      _builder_1.append("<div class=\"card\">");
      _builder_1.newLine();
      _builder_1.append("\t              ");
      _builder_1.append("<div class=\"card-body\">");
      _builder_1.newLine();
      _builder_1.append("\t                ");
      _builder_1.append("<p class=\"card-text\">");
      String _name = e.getName();
      _builder_1.append(_name, "\t                ");
      _builder_1.append(": ");
      String _value = e.getDescription().get(0).getValue();
      _builder_1.append(_value, "\t                ");
      _builder_1.append("</p>");
      _builder_1.newLineIfNotEmpty();
      _builder_1.append("\t              ");
      _builder_1.append("</div>");
      _builder_1.newLine();
      _builder_1.append("\t            ");
      _builder_1.append("</div>");
      _builder_1.newLine();
      this.builder.append(_builder_1);
    }
    StringConcatenation _builder_2 = new StringConcatenation();
    _builder_2.append("    ");
    _builder_2.append("</div>");
    _builder_2.newLine();
    _builder_2.append("  ");
    _builder_2.append("</div>");
    _builder_2.newLine();
    _builder_2.append("</div>");
    _builder_2.newLine();
    this.builder.append(_builder_2);
  }
  
  private void genFooter(final PageFooter footer) {
    this.builder.newLine();
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<!--Footer-->");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("<nav class=\"navbar navbar-light navbar-expand-lg bg-light\">");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("<li class=\"nav-item\">");
    _builder.newLine();
    _builder.append("\t\t          ");
    _builder.append("<a class=\"nav-link\" href=\"#\">FooterLinks</a>");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("</li>");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("<li class=\"nav-item\">");
    _builder.newLine();
    _builder.append("\t\t          ");
    _builder.append("<a class=\"nav-link\" href=\"#\">Link</a>");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("</li>");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("<li class=\"nav-item\">");
    _builder.newLine();
    _builder.append("\t\t          ");
    _builder.append("<a class=\"nav-link\" href=\"#\">Link2</a>");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("</li>");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("</ul>");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("<p class=\"float-right\">");
    _builder.newLine();
    _builder.append("\t\t        ");
    _builder.append("<a href=\"#\">Back to top</a>");
    _builder.newLine();
    _builder.append("\t\t      ");
    _builder.append("</p>");
    _builder.newLine();
    _builder.append("\t\t    ");
    _builder.append("</nav>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.newLine();
    this.builder.append(_builder);
  }
}
